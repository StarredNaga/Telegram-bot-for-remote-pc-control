using System.Diagnostics;
using TelegramBot.Models;

namespace TelegramBot.Commands;

/// <summary>
/// Command to shutdown pc (Correctly work only on windows)
/// </summary>
public class ShutdownCommand : ICommand
{   
    private readonly IConfiguration _configuration;

    public ShutdownCommand(IConfiguration configuration)
    {
        _configuration = configuration;
    }
    
    public CommandInfo Info => new()
    {
        Name = "shutdown",
        Description = "–í—ã–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞",
        EmojiIcon = "üîå",
        Category = "System",
        Parameters = new List<ParameterInfo>
        {
            new()
            {
                Name = "delay",
                Description = "–ó–∞–¥–µ—Ä–∂–∫–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö",
                Type = ParamType.Number,
                DefaultValue = 30,
                Validator = value => (int)value > 0,
                ValidationMessage = "–ó–∞–¥–µ—Ä–∂–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º"
            }
        }
    };

    public async Task<CommandResult> ExecuteAsync(UserRequest request)
    {
        var terminal = _configuration["System:Terminal"];
        
        if (OperatingSystem.IsWindows())
        {
            var delay = request.GetParam("delay", 30);
            
            var delayParam = delay > 0 ? $"/t {delay}" : "";

            var process = new ProcessStartInfo
            {
                FileName = terminal,
                Arguments = $"shutdown /s {delayParam} /f"
            };

            Process.Start(process);

        }
        else
        {
            var delay = request.GetParam("delay", 30);
            
            var delayParam = delay > 0 ? $"+{delay / 60}" : "-c";

            var process = new ProcessStartInfo
            {
                FileName = "sudo",
                Arguments = $"shutdown {delayParam}"
            };
            
            Process.Start(process);
        }
        
        return new CommandResult($"üñ•Ô∏è –ö–æ–º–ø—å—é—Ç–µ—Ä –±—É–¥–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω —á–µ—Ä–µ–∑ {request.GetParam("delay", 30)} —Å–µ–∫—É–Ω–¥");
    }
}